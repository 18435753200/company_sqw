<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mall.supplier.dao.SGeneralLogisticTplMapper" >
  <resultMap id="BaseResultMap" type="com.mall.supplier.model.SGeneralLogisticTpl" >
    <id column="logistic_temp_id" property="logisticTempId" jdbcType="BIGINT" />
    <result column="supplier_id" property="supplierId" jdbcType="BIGINT" />
    <result column="logistic_temp_name" property="logisticTempName" jdbcType="VARCHAR" />
    <result column="province_start_id" property="provinceStartId" jdbcType="INTEGER" />
    <result column="city_start_id" property="cityStartId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="base_qt" property="baseQt" jdbcType="INTEGER" />
    <result column="base_fee" property="baseFee" jdbcType="DECIMAL" />
    <result column="step_qt" property="stepQt" jdbcType="INTEGER" />
    <result column="step_fee" property="stepFee" jdbcType="DECIMAL" />
    <result column="nonefee_price" property="nonefeePrice" jdbcType="DECIMAL" />
    <result column="nonefee_num" property="nonefeeNum" jdbcType="INTEGER" />
    <result column="nonefee_province_id" property="nonefeeProvinceId" jdbcType="VARCHAR" />
    <result column="tpl_type" property="tplType" jdbcType="INTEGER" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    logistic_temp_id, supplier_id, logistic_temp_name, province_start_id, city_start_id, 
    type, base_qt, base_fee, step_qt, step_fee, nonefee_price, nonefee_num, nonefee_province_id, 
    tpl_type, memo, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mall.supplier.model.SGeneralLogisticTplExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from s_general_logistic_tpl
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from s_general_logistic_tpl
    where logistic_temp_id = #{logisticTempId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from s_general_logistic_tpl
    where logistic_temp_id = #{logisticTempId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.mall.supplier.model.SGeneralLogisticTplExample" >
    delete from s_general_logistic_tpl
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mall.supplier.model.SGeneralLogisticTpl" >
    insert into s_general_logistic_tpl (logistic_temp_id, supplier_id, logistic_temp_name, 
      province_start_id, city_start_id, type, 
      base_qt, base_fee, step_qt, 
      step_fee, nonefee_price, nonefee_num, 
      nonefee_province_id, tpl_type, memo, 
      status)
    values (#{logisticTempId,jdbcType=BIGINT}, #{supplierId,jdbcType=BIGINT}, #{logisticTempName,jdbcType=VARCHAR}, 
      #{provinceStartId,jdbcType=INTEGER}, #{cityStartId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{baseQt,jdbcType=INTEGER}, #{baseFee,jdbcType=DECIMAL}, #{stepQt,jdbcType=INTEGER}, 
      #{stepFee,jdbcType=DECIMAL}, #{nonefeePrice,jdbcType=DECIMAL}, #{nonefeeNum,jdbcType=INTEGER}, 
      #{nonefeeProvinceId,jdbcType=VARCHAR}, #{tplType,jdbcType=INTEGER}, #{memo,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.mall.supplier.model.SGeneralLogisticTpl" >
    insert into s_general_logistic_tpl
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logisticTempId != null" >
        logistic_temp_id,
      </if>
      <if test="supplierId != null" >
        supplier_id,
      </if>
      <if test="logisticTempName != null" >
        logistic_temp_name,
      </if>
      <if test="provinceStartId != null" >
        province_start_id,
      </if>
      <if test="cityStartId != null" >
        city_start_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="baseQt != null" >
        base_qt,
      </if>
      <if test="baseFee != null" >
        base_fee,
      </if>
      <if test="stepQt != null" >
        step_qt,
      </if>
      <if test="stepFee != null" >
        step_fee,
      </if>
      <if test="nonefeePrice != null" >
        nonefee_price,
      </if>
      <if test="nonefeeNum != null" >
        nonefee_num,
      </if>
      <if test="nonefeeProvinceId != null" >
        nonefee_province_id,
      </if>
      <if test="tplType != null" >
        tpl_type,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logisticTempId != null" >
        #{logisticTempId,jdbcType=BIGINT},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="logisticTempName != null" >
        #{logisticTempName,jdbcType=VARCHAR},
      </if>
      <if test="provinceStartId != null" >
        #{provinceStartId,jdbcType=INTEGER},
      </if>
      <if test="cityStartId != null" >
        #{cityStartId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="baseQt != null" >
        #{baseQt,jdbcType=INTEGER},
      </if>
      <if test="baseFee != null" >
        #{baseFee,jdbcType=DECIMAL},
      </if>
      <if test="stepQt != null" >
        #{stepQt,jdbcType=INTEGER},
      </if>
      <if test="stepFee != null" >
        #{stepFee,jdbcType=DECIMAL},
      </if>
      <if test="nonefeePrice != null" >
        #{nonefeePrice,jdbcType=DECIMAL},
      </if>
      <if test="nonefeeNum != null" >
        #{nonefeeNum,jdbcType=INTEGER},
      </if>
      <if test="nonefeeProvinceId != null" >
        #{nonefeeProvinceId,jdbcType=VARCHAR},
      </if>
      <if test="tplType != null" >
        #{tplType,jdbcType=INTEGER},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mall.supplier.model.SGeneralLogisticTplExample" resultType="java.lang.Integer" >
    select count(*) from s_general_logistic_tpl
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update s_general_logistic_tpl
    <set >
      <if test="record.logisticTempId != null" >
        logistic_temp_id = #{record.logisticTempId,jdbcType=BIGINT},
      </if>
      <if test="record.supplierId != null" >
        supplier_id = #{record.supplierId,jdbcType=BIGINT},
      </if>
      <if test="record.logisticTempName != null" >
        logistic_temp_name = #{record.logisticTempName,jdbcType=VARCHAR},
      </if>
      <if test="record.provinceStartId != null" >
        province_start_id = #{record.provinceStartId,jdbcType=INTEGER},
      </if>
      <if test="record.cityStartId != null" >
        city_start_id = #{record.cityStartId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.baseQt != null" >
        base_qt = #{record.baseQt,jdbcType=INTEGER},
      </if>
      <if test="record.baseFee != null" >
        base_fee = #{record.baseFee,jdbcType=DECIMAL},
      </if>
      <if test="record.stepQt != null" >
        step_qt = #{record.stepQt,jdbcType=INTEGER},
      </if>
      <if test="record.stepFee != null" >
        step_fee = #{record.stepFee,jdbcType=DECIMAL},
      </if>
      <if test="record.nonefeePrice != null" >
        nonefee_price = #{record.nonefeePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.nonefeeNum != null" >
        nonefee_num = #{record.nonefeeNum,jdbcType=INTEGER},
      </if>
      <if test="record.nonefeeProvinceId != null" >
        nonefee_province_id = #{record.nonefeeProvinceId,jdbcType=VARCHAR},
      </if>
      <if test="record.tplType != null" >
        tpl_type = #{record.tplType,jdbcType=INTEGER},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update s_general_logistic_tpl
    set logistic_temp_id = #{record.logisticTempId,jdbcType=BIGINT},
      supplier_id = #{record.supplierId,jdbcType=BIGINT},
      logistic_temp_name = #{record.logisticTempName,jdbcType=VARCHAR},
      province_start_id = #{record.provinceStartId,jdbcType=INTEGER},
      city_start_id = #{record.cityStartId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      base_qt = #{record.baseQt,jdbcType=INTEGER},
      base_fee = #{record.baseFee,jdbcType=DECIMAL},
      step_qt = #{record.stepQt,jdbcType=INTEGER},
      step_fee = #{record.stepFee,jdbcType=DECIMAL},
      nonefee_price = #{record.nonefeePrice,jdbcType=DECIMAL},
      nonefee_num = #{record.nonefeeNum,jdbcType=INTEGER},
      nonefee_province_id = #{record.nonefeeProvinceId,jdbcType=VARCHAR},
      tpl_type = #{record.tplType,jdbcType=INTEGER},
      memo = #{record.memo,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mall.supplier.model.SGeneralLogisticTpl" >
    update s_general_logistic_tpl
    <set >
      <if test="supplierId != null" >
        supplier_id = #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="logisticTempName != null" >
        logistic_temp_name = #{logisticTempName,jdbcType=VARCHAR},
      </if>
      <if test="provinceStartId != null" >
        province_start_id = #{provinceStartId,jdbcType=INTEGER},
      </if>
      <if test="cityStartId != null" >
        city_start_id = #{cityStartId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="baseQt != null" >
        base_qt = #{baseQt,jdbcType=INTEGER},
      </if>
      <if test="baseFee != null" >
        base_fee = #{baseFee,jdbcType=DECIMAL},
      </if>
      <if test="stepQt != null" >
        step_qt = #{stepQt,jdbcType=INTEGER},
      </if>
      <if test="stepFee != null" >
        step_fee = #{stepFee,jdbcType=DECIMAL},
      </if>
      <if test="nonefeePrice != null" >
        nonefee_price = #{nonefeePrice,jdbcType=DECIMAL},
      </if>
      <if test="nonefeeNum != null" >
        nonefee_num = #{nonefeeNum,jdbcType=INTEGER},
      </if>
      <if test="nonefeeProvinceId != null" >
        nonefee_province_id = #{nonefeeProvinceId,jdbcType=VARCHAR},
      </if>
      <if test="tplType != null" >
        tpl_type = #{tplType,jdbcType=INTEGER},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where logistic_temp_id = #{logisticTempId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mall.supplier.model.SGeneralLogisticTpl" >
    update s_general_logistic_tpl
    set supplier_id = #{supplierId,jdbcType=BIGINT},
      logistic_temp_name = #{logisticTempName,jdbcType=VARCHAR},
      province_start_id = #{provinceStartId,jdbcType=INTEGER},
      city_start_id = #{cityStartId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      base_qt = #{baseQt,jdbcType=INTEGER},
      base_fee = #{baseFee,jdbcType=DECIMAL},
      step_qt = #{stepQt,jdbcType=INTEGER},
      step_fee = #{stepFee,jdbcType=DECIMAL},
      nonefee_price = #{nonefeePrice,jdbcType=DECIMAL},
      nonefee_num = #{nonefeeNum,jdbcType=INTEGER},
      nonefee_province_id = #{nonefeeProvinceId,jdbcType=VARCHAR},
      tpl_type = #{tplType,jdbcType=INTEGER},
      memo = #{memo,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where logistic_temp_id = #{logisticTempId,jdbcType=BIGINT}
  </update>
  
  <select id="selectAllTpl" resultMap="BaseResultMap" parameterType="java.lang.Long">
	select * from s_general_logistic_tpl where supplier_id= #{parameter.supplierId} and status=1
	</select>
  <select id="selectAllTplPageList" resultMap="BaseResultMap" parameterType="java.lang.Long">
	select * from s_general_logistic_tpl where supplier_id= #{parameter.supplierId} and status=1
	</select>
</mapper>