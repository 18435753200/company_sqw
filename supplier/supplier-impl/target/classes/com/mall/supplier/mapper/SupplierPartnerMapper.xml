<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mall.supplier.dao.SupplierPartnerMapper" >
  <resultMap id="BaseResultMap" type="com.mall.supplier.model.SupplierPartner" >
    <id column="partner_id" property="partnerId" jdbcType="INTEGER" />
    <result column="supplier_id" property="supplierId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    partner_id, supplier_id, name, address, contact, telephone, email
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from s_supplier_partner
    where partner_id = #{partnerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from s_supplier_partner
    where partner_id = #{partnerId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mall.supplier.model.SupplierPartner" >
    insert into s_supplier_partner (partner_id, supplier_id, name, 
      address, contact, telephone, 
      email)
    values (#{partnerId,jdbcType=INTEGER}, #{supplierId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mall.supplier.model.SupplierPartner" >
    insert into s_supplier_partner
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="partnerId != null" >
        partner_id,
      </if>
      <if test="supplierId != null" >
        supplier_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="contact != null" >
        contact,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="email != null" >
        email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="partnerId != null" >
        #{partnerId,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mall.supplier.model.SupplierPartner" >
    update s_supplier_partner
    <set >
      <if test="supplierId != null" >
        supplier_id = #{supplierId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
    </set>
    where partner_id = #{partnerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mall.supplier.model.SupplierPartner" >
    update s_supplier_partner
    set supplier_id = #{supplierId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where partner_id = #{partnerId,jdbcType=INTEGER}
  </update>
</mapper>